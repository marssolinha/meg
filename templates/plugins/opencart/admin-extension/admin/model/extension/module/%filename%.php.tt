<?php

class ModelExtensionModule<%= classname %> extends Model {
    protected $table = DB_PREFIX."<%= filename %>";
    
    public function getList($data = NULL) {
        $sql = "SELECT * FROM {$this->table}";
        
        // TODO change #FIELD#
        if (isset($data['filter_<%= config[:fields].first.split(":")[0] %>'])) {
            $sql .= " WHERE <%= config[:fields].first.split(":")[0] %> LIKE '%{$this->db->escape($data['filter_<%= config[:fields].first.split(":")[0] %>'])}%'";
        }
        
        $sql .= " ORDER BY <%= config[:fields].first.split(":")[0] %> ASC";
        
        if (isset($data['start']) || isset($data['limit'])) {
            if ($data['start'] < 0)
                $data['start'] = 0;
            if ($data['limit'] < 1)
                $data['limit'] = 20;
            
            $sql .= " LIMIT {$data['start']},{$data['limit']}";
        }
        
        $query = $this->db->query($sql);
        return $query->rows;
    }
    
    public function get($<%= filename %>_id) {
        $query = $this->db->query("SELECT * FROM {$this->table} WHERE <%= filename %>_id={$<%= filename %>_id}");
        return $query->row;
    }
    
    public function delete($<%= filename %>_ids) {
        $status = false;
        foreach ($<%= filename %>_ids as $<%= filename %>_id) {
            $status = $this->db->query("DELETE FROM {$this->table} WHERE <%= filename %>_id={$<%= filename %>_id}");
            if (!$status) {
                break;
            }
        }
        return $status;
    }
    
    public function save($data, $<%= filename %>_id = NULL) {
        $status = false;
        if (isset($<%= filename %>_id)) {
            $data = $this->prepare_update($data);
            return $this->db->query("UPDATE {$this->table} SET " . implode(", ", $data) . " WHERE <%= filename %>_id={$<%= filename %>_id}");
        } else {
            $data = $this->prepare_insert($data);
            return $this->db->query("INSERT INTO {$this->table} (" . implode(", ", $data['keys']) . ") VALUE (" . implode(", ", $data['values']) . ")");
        }
        
        return $status;
    }
    
    protected function prepare_insert($data) {
        unset($data['files']);
        unset($data['file']);
        
        $new_data = array("keys" => array(), "values" => array());
        foreach ($data as $key => $value) {
            $new_data["keys"][] = $key;
            $new_data["values"][] = ($value == '')? "''" : "'".html_entity_decode($this->db->escape($value), ENT_QUOTES, 'UTF-8')."'";
        }
        return $new_data;
    }
    
    protected function prepare_update($data) {
        unset($data['files']);
        unset($data['file']);
        
        $new_data = array();
        foreach ($data as $key => $value) {
            $new_data[] = "{$key}='".html_entity_decode($this->db->escape($value), ENT_QUOTES, 'UTF-8')."'";
        }        
        return $new_data;
    }
    
    public function install() {
        $this->db->query("
            CREATE TABLE IF NOT EXISTS {$this->table} (
                <%= filename %>_id INT(11) NOT NULL AUTO_INCREMENT,
            <%- config[:fields].each do |field| -%>
                <%= field.split(':')[0] %> <%= field.split(':')[1].upcase %><%= field.split(':')[2]? '(' + field.split(':')[2] + ')' : '' %>,
            <%- end -%>
                KEY <%= filename %>_id(<%= filename %>_id),
                PRIMARY KEY <%= filename %>_id(<%= filename %>_id)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
        ");
    }
    
    public function uninstall() {
        $this->db->query("DROP TABLE {$this->table}");
    }
}
